/* 복합 셀렉터 combinator */
/* 부모자식 조상 자손 */

/* 후손 셀렉터 */
/* 셀렉터 A 셀렉터 B div p */

div p {
    color: red;
}

/* 자식 셀렉터 child combinator */
/* 셀렉터 A > 셀렉터 B */

div > p {
    color: blue;
}

span > p {
    color: brown;
}

/* 형제(동위) 셀렉터 sibling combinator */
/* 형제 관계에서 뒤에 위치하는 요소를 선택할 때 사용 */

/* 인접 형제 셀렉터 A + 셀렉터 B 
: 셀렉터 A의 형제 요소 중 셀렉터 A 바로 뒤에 위치하는 셀렉터 B 요소를 선택
: A와 B 사이에 다른 요소가 존재하면 선택되지 않는다. */
p + ul {
    color: aqua;
}

/* 일반 형제 셀렉터 A ~ 셀렉터 B 
: 셀렉터 A의 형제 요소 중 뒤에 위치하는 셀렉터 B 요소를 모두 선택 */
p ~ ol {
    color: aqua;
}

/* 가상 클래스 셀렉터 Pseudo-class selector */
/* 요소의 특정 상태에 따라 스타일을 정의할 때 사용 */
/* 특정상태란?  */
/* 마우스가 올라와 있을 때, 
포커스가 들어와 있을 때,
링크를 방문했을 때와 아직 방문하지 않았을 때 */

a:hover {
    color: violet;
}

input:focus {
    background-color: yellow;
}

/* 링크 셀렉터 */
/*  :link 셀렉터가 방문하지 않은 링크일 때
    :visited 셀렉터가 방문한 링크일 때
    :hover 셀렉터에 마우스가 올라와 있을 때
    :active 셀렉터가 클릭된 상태일 때
    :focus 셀렉터에 포커스가 들어와 있을 때 */

a:link {
    color: orange;
}

a:visited {
    color: green;
}

a:active {
    font-weight: bold;
}

input[type="text"]:focus {
    color: red;
}

input[type="password"]:focus {
    color: green;
}

/* 구조 가상 클래스 셀렉터 */
/* :first-child 셀렉터에 해당하는 모든 요소 중 첫번째 자식인 요소를 선택 */
/* :last-child 셀렉터에 해당하는 모든 요소 중 마지막 자식인 요소를 선택 */

p:first-child {
    color: red;
}

p:last-child {
    color: blue;
}

/* :nth-child(n), :nth-last-child(n) */
/* :nth-child(n) 셀렉터에 해당하는 모든 요소 중 앞에서 n번째 자식인 요소를 선택 */
/* :nth-last-child(n) 셀렉터에 해당하는 모든 요소 중 뒤에서 n번째 자식인 요소를 선택 */
/* n은 0부터 시작 */

/* ol 요소의 자식 요소인 li 요소 중에서 짝수 번째 요소만을 선택 */
ol > li:nth-child(2n) {
    background-color: orange;
}

/* ol의 li 중에서 홀수번째 요소만 선택 */
ol > li:nth-child(2n+1) {
    background-color: lightgreen;
}

/* ol의 li 중에서 첫번째 요소만 선택 */
ol > li:first-child {
    color: red;
}
/* ol의 li 중에서 마지막 요소만 선택 */
ol > li:last-child {
    color: blue;
}

/* ol의 li 중에서 4번째 요소만 선택 */
ol > li:nth-child(4) {
    background-color: brown;
}

/* ul의 모든 자식 요소 중에서 뒤에서부터 홀수 번째 요소만 선택 */
ul > :nth-last-child(2n+1) {
    font-size: 30px;
}

/* ul의 모든 자식 요소 중에서 뒤에서부터 짝수 번째 요소만 선택 */
ul > :nth-last-child(2n) {
    color: violet;
}

/* :first-of-type 셀렉터에 해당하는 요소의 부모 요소의 자식 요소 중 첫번째 등장하는 요소를 선택 */
/* :last-of-type 셀렉터에 해당하는 요소의 부모 요소의 자식 요소 중 마지막에 등장하는 요소를 선택 */
/* :nth-of-type(n) 셀렉터에 해당하는 요소의 부모 요소의 자식 요소 중 앞에서 n번째 등장하는 요소를 선택 */
/* :nth-last-of-type(n) 셀렉터에 해당하는 요소의 부모 요소의 자식 요소 중 뒤에서 n번째 등장하는 요소를 선택  */

/* p의 부모의 자식 중 첫번째 등장하는 p의 요소 선택 */
p:first-of-type {
    color: red;
}

/* p의 부모의 자식 중 마지막에 등장하는 p의 요소 선택 */
p:last-of-type {
    color: blanchedalmond;
}

/* p의 부모의 자식 중 앞에서 2번째에 등장하는 p 요소 */
p:nth-of-type(2) {
    color: green;
}

/* p의 부모의 자식 중 뒤에서 2번째에 등장하는 p 요소 */
p:nth-last-of-type(2) {
    color: orange;
}

/* 정합성 체크 셀렉터 : 입력받은 내용이 적합할 때 인증에 성공한 input 요소 또는 form 요소를 선택 */
/* :valid, :invalid */

input[type="text"]:valid {
    background-color: greenyellow;
}

input[type="text"]:invalid{
    background-color: lightcoral;
}

/* 가상 요소 셀렉터 */
/* ::first-letter 콘텐츠의 첫글자를 선택 */
/* ::first-line 콘텐츠의 첫줄을 선택, 블록 요소만 적용가능 */
/* ::after 콘텐츠의 뒤에 위치하는 공간을 선택 */
/* ::before 콘텐츠의 앞에 위치하는 공간을 선택 */
/* ::selection 드래그한 콘텐츠를 선택 safari 등에서는 작동하지 않음 */

.beforeafter > p::first-letter{
    color: black;
    font-size: 3em;
}

.beforeafter > p::first-line {
    color: black;
}

/* h1 요소의 콘텐츠 앞 공간에 content 속성의 값을 삽입 */
.beforeafter > h1::before {
    content: " HTML!! ";
    color: blue;
}

/* h1 요소의 콘텐츠 뒷 공간에 content 속성의 값을 삽입 */
.beforeafter > h1::after {
    content: " CSS3!! ";
    color: red;
}

.beforeafter > ::selection {
    color: red;
    background-color: yellow;
}